import 'dart:convert';

import 'package:flutter/services.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:kwriting/domain/domain.dart';

void main() {
  final converter = WordToKanaConverter();
  final kanasJson = <String, KanaModel>{};

  setUpAll(() async {
    TestWidgetsFlutterBinding.ensureInitialized();
    return rootBundle.loadString('assets/database/kanas.json').then((response) {
      final jsonFile = jsonDecode(response) as List<dynamic>;
      for (final jsonData in jsonFile) {
        final model = KanaModel.fromJson(jsonData as Map<String, dynamic>);
        kanasJson[model.id] = model;
      }
    });
  });
  group('check data', () {
    test('must check all data returned of word みなみアフリカ', () {
      final kanas = converter.convert('みなみアフリカ', kanasJson);

      expect(kanas[0].id, 'み');
      expect(kanas[0].romaji, 'mi');
      expect(kanas[0].kanaType, KanaType.hiragana);
      expect(kanas[0].strokes, [
        'M 32.5 26 C 34.38 27.75 36.56 27.7 39.38 27.25 C 41.3863 26.9294 43.3552 26.4724 45.3779 25.9164 C 47.2669 25.3972 49.2028 24.7916 51.26 24.13 C 55.52 22.76 57.51 24.01 55.76 29.25 C 55.1581 31.0522 54.1824 33.6718 52.944 36.8513 C 52.0642 39.1101 51.0518 41.6514 49.9466 44.383 C 48.9848 46.7603 47.9527 49.2816 46.8765 51.8862 C 45.8691 54.3245 44.8231 56.8358 43.76 59.37 C 42.4298 62.5428 41.0805 65.375 39.7286 67.893 C 38.0497 71.02 36.3666 73.6624 34.7109 75.8707 C 32.4513 78.8845 30.2424 81.0897 28.1642 82.615 C 24.7801 85.0986 21.7424 85.779 19.3953 85.2108 C 16.3762 84.4799 14.5 81.6829 14.5 78 C 14.5 74.9415 15.4434 72.4883 17.0491 70.5399 C 18.6693 68.5739 20.9638 67.1218 23.6436 66.0803 C 26.0119 65.1599 28.6812 64.5602 31.4521 64.2099 C 34.0947 63.8758 36.8296 63.7685 39.484 63.8262 C 42.318 63.8879 45.0602 64.1375 47.5 64.5 C 50.7819 64.9878 53.8435 65.5109 56.7399 66.084 C 59.9632 66.7218 62.982 67.4214 65.8723 68.2033 C 68.9684 69.0408 71.917 69.9727 74.8117 71.0239 C 77.7247 72.0817 80.583 73.2604 83.4819 74.5853 C 86.2184 75.8361 88.9911 77.2172 91.88 78.75',
        'M 79.38 54.75 C 80.13 57.13 79.87 59.12 79.38 61 C 78.8232 63.1326 78.0416 65.8694 76.9267 68.9045 C 76.0479 71.2969 74.9621 73.8747 73.6162 76.4879 C 72.4011 78.8472 70.974 81.2353 69.2959 83.5421 C 67.7135 85.7173 65.9078 87.8203 63.8461 89.7584 C 61.8904 91.5969 59.7044 93.2871 57.26 94.75'
      ]);

      expect(kanas[1].id, 'な');
      expect(kanas[1].romaji, 'na');
      expect(kanas[1].kanaType, KanaType.hiragana);
      expect(kanas[1].strokes, [
        'M 22.88 28.96 C 24.06 29.54 26.18 30.06 28.35 30.01 C 31.1494 29.9442 33.9079 29.6939 36.6785 29.2759 C 39.3809 28.8682 42.095 28.301 44.87 27.59 C 46.9352 27.063 48.9068 26.4148 50.6628 25.7595 C 53.0052 24.8854 54.9641 23.9987 56.25 23.37',
        'M 42.99 14 C 43.62 14.89 43.55 16.52 43.3 17.72 C 42.7369 20.4139 42.1003 23.0441 41.3951 25.6152 C 40.6688 28.2636 39.8698 30.8492 39.0036 33.3773 C 38.1154 35.9691 37.1565 38.5004 36.1328 40.9765 C 35.0886 43.5021 33.9768 45.9703 32.8038 48.3868 C 31.6135 50.839 30.3601 53.2381 29.05 55.59 C 28.0315 57.4233 26.976 59.222 25.8896 60.9862 C 24.7893 62.7729 23.6573 64.5242 22.5 66.24',
        'M 72.26 23.25 C 75.262 24.3409 78.047 25.5497 80.4097 26.8883 C 83.4619 28.6175 85.8094 30.563 87.01 32.75 C 91.07 40.16 86.76 36.13 83.51 36.63',
        'M 68.88 44.62 C 67.88 46.5 66.74 49.86 67 52.87 C 67.2089 55.2284 67.4473 57.4869 67.6716 59.732 C 67.8988 62.0054 68.1115 64.265 68.2645 66.6006 C 68.4088 68.8043 68.5 71.0757 68.5 73.49 C 68.5 76.5851 67.8323 79.1952 66.7036 81.3579 C 65.3783 83.8972 63.4175 85.8196 61.1556 87.1861 C 58.7966 88.6112 56.1102 89.4315 53.4757 89.7159 C 50.569 90.0298 47.7256 89.6914 45.4551 88.7933 C 42.5775 87.655 40.62 85.6178 40.62 82.87 C 40.62 79.9063 42.9143 77.7741 45.9087 76.4207 C 48.5926 75.2076 51.8389 74.62 54.5 74.62 C 56.9519 74.62 59.7178 74.8752 62.6108 75.4241 C 65.1735 75.9103 67.8358 76.6269 70.4679 77.6008 C 72.984 78.5318 75.4725 79.6978 77.8197 81.1222 C 80.1372 82.5287 82.3171 84.1871 84.25 86.12'
      ]);

      expect(kanas[2].id, 'み');
      expect(kanas[2].romaji, 'mi');
      expect(kanas[2].kanaType, KanaType.hiragana);
      expect(kanas[2].strokes, [
        'M 32.5 26 C 34.38 27.75 36.56 27.7 39.38 27.25 C 41.3863 26.9294 43.3552 26.4724 45.3779 25.9164 C 47.2669 25.3972 49.2028 24.7916 51.26 24.13 C 55.52 22.76 57.51 24.01 55.76 29.25 C 55.1581 31.0522 54.1824 33.6718 52.944 36.8513 C 52.0642 39.1101 51.0518 41.6514 49.9466 44.383 C 48.9848 46.7603 47.9527 49.2816 46.8765 51.8862 C 45.8691 54.3245 44.8231 56.8358 43.76 59.37 C 42.4298 62.5428 41.0805 65.375 39.7286 67.893 C 38.0497 71.02 36.3666 73.6624 34.7109 75.8707 C 32.4513 78.8845 30.2424 81.0897 28.1642 82.615 C 24.7801 85.0986 21.7424 85.779 19.3953 85.2108 C 16.3762 84.4799 14.5 81.6829 14.5 78 C 14.5 74.9415 15.4434 72.4883 17.0491 70.5399 C 18.6693 68.5739 20.9638 67.1218 23.6436 66.0803 C 26.0119 65.1599 28.6812 64.5602 31.4521 64.2099 C 34.0947 63.8758 36.8296 63.7685 39.484 63.8262 C 42.318 63.8879 45.0602 64.1375 47.5 64.5 C 50.7819 64.9878 53.8435 65.5109 56.7399 66.084 C 59.9632 66.7218 62.982 67.4214 65.8723 68.2033 C 68.9684 69.0408 71.917 69.9727 74.8117 71.0239 C 77.7247 72.0817 80.583 73.2604 83.4819 74.5853 C 86.2184 75.8361 88.9911 77.2172 91.88 78.75',
        'M 79.38 54.75 C 80.13 57.13 79.87 59.12 79.38 61 C 78.8232 63.1326 78.0416 65.8694 76.9267 68.9045 C 76.0479 71.2969 74.9621 73.8747 73.6162 76.4879 C 72.4011 78.8472 70.974 81.2353 69.2959 83.5421 C 67.7135 85.7173 65.9078 87.8203 63.8461 89.7584 C 61.8904 91.5969 59.7044 93.2871 57.26 94.75'
      ]);

      expect(kanas[3].id, 'ア');
      expect(kanas[3].romaji, 'a');
      expect(kanas[3].kanaType, KanaType.katakana);
      expect(kanas[3].strokes, [
        'M 23.5 26.25 C 25.91 27.81 27.48 27.69 32.01 27 C 34.581 26.6053 37.9134 26.1089 41.6535 25.5621 C 44.6673 25.1214 47.946 24.648 51.3043 24.1687 C 54.5041 23.712 57.7762 23.2499 60.9607 22.8056 C 64.3435 22.3337 67.6274 21.8819 70.6205 21.478 C 74.4555 20.9605 77.8132 20.5216 80.29 20.22 C 82.9829 19.8905 85.0209 20.4464 85.6315 21.6067 C 86.2068 22.6998 85.515 24.3293 82.91 26.26 C 80.3895 28.1271 77.9219 29.9244 75.2918 31.7822 C 72.8955 33.4749 70.3642 35.2177 67.535 37.1091 C 65.1535 38.7012 62.5609 40.3986 59.66 42.26',
        'M 53.12 41.12 C 53.91 42.62 54.14 44.36 53.7 46.4 C 53.085 49.2131 52.4274 51.9077 51.7191 54.5029 C 50.9649 57.2663 50.1533 59.9169 49.2744 62.4777 C 48.3532 65.162 47.3581 67.7476 46.278 70.2607 C 45.1716 72.835 43.976 75.3333 42.6792 77.7839 C 41.387 80.2259 39.9942 82.6205 38.4891 84.9958 C 37.0288 87.3002 35.4627 89.5864 33.78 91.88'
      ]);

      expect(kanas[4].id, 'フ');
      expect(kanas[4].romaji, 'fu');
      expect(kanas[4].kanaType, KanaType.katakana);
      expect(kanas[4].strokes, [
        'M 24.5 30 C 26.38 31.88 28 32.04 31 31.62 C 33.9223 31.2169 36.8446 30.7984 39.769 30.3666 C 42.6852 29.936 45.6035 29.4921 48.5258 29.0371 C 51.4369 28.5839 54.3521 28.1197 57.2732 27.6464 C 60.18 27.1756 63.0928 26.6958 66.0135 26.2093 C 68.9172 25.7256 71.8287 25.2351 74.75 24.74 C 78.205 24.1524 80.8746 24.7478 82.1869 26.3664 C 83.4651 27.9429 83.4556 30.49 81.63 33.86 C 80.1576 36.5749 78.6754 39.3148 77.1337 42.0582 C 75.6231 44.7463 74.0553 47.4378 72.3837 50.1125 C 70.755 52.7186 69.0277 55.3087 67.1586 57.8644 C 65.3537 60.3322 63.4167 62.7679 61.3085 65.1546 C 59.2972 67.4316 57.1302 69.664 54.7737 71.8374 C 52.5544 73.8841 50.1671 75.8784 47.5834 77.8081 C 45.1759 79.6062 42.598 81.3483 39.8268 83.0245 C 37.2627 84.5753 34.5331 86.0698 31.62 87.5'
      ]);

      expect(kanas[5].id, 'リ');
      expect(kanas[5].romaji, 'ri');
      expect(kanas[5].kanaType, KanaType.katakana);
      expect(kanas[5].strokes, [
        'M 35 18.38 C 36.12 19.88 36.62 21.38 36.62 23.26 C 36.62 23.9734 36.62 27.745 36.62 32.2605 C 36.62 35.1577 36.62 38.3611 36.62 41.2595 C 36.62 45.7486 36.62 49.5058 36.62 50.26 C 36.62 52.26 36.62 56.38 36.62 58.01',
        'M 71 15.38 C 72.5 16.63 73.38 18.5 73.38 20.76 C 73.38 21.4893 73.3675 24.7552 73.3506 28.9791 C 73.3405 31.491 73.3289 34.3416 73.3174 37.199 C 73.3059 40.0414 73.2946 42.8905 73.2851 45.4196 C 73.2704 49.3217 73.26 52.4619 73.26 53.64 C 73.26 57.0254 72.9772 60.2026 72.4462 63.1845 C 71.8581 66.4872 70.9655 69.5503 69.8157 72.3912 C 68.5781 75.4489 67.0424 78.2492 65.2673 80.8138 C 63.4219 83.48 61.3177 85.8915 59.0208 88.0724 C 56.6923 90.2833 54.1658 92.2574 51.51 94.02'
      ]);

      expect(kanas[6].id, 'カ');
      expect(kanas[6].romaji, 'ka');
      expect(kanas[6].kanaType, KanaType.katakana);
      expect(kanas[6].strokes, [
        'M 25.5 40.62 C 27.38 41.87 30.01 42.49 32.62 42.12 C 35.5354 41.7124 38.3716 41.3178 41.1191 40.9368 C 44.0576 40.5294 46.8946 40.1376 49.6184 39.7623 C 52.5919 39.3525 55.4304 38.9624 58.1189 38.5928 C 61.1507 38.1761 63.9916 37.7856 66.6198 37.4229 C 69.7715 36.9879 72.6174 36.5927 75.12 36.24 C 78.5983 35.7515 81.2055 35.7975 82.7329 36.8632 C 84.3321 37.9789 84.7476 40.2123 83.74 44.12 C 83.1344 46.4766 82.5101 48.94 81.8157 51.5206 C 81.1834 53.8706 80.493 56.3178 79.7058 58.8699 C 78.9877 61.1976 78.1891 63.6127 77.2806 66.1209 C 76.4498 68.4145 75.5271 70.7861 74.49 73.24 C 72.9303 76.9392 71.5225 79.8592 70.2391 82.1412 C 67.6474 86.7491 65.5626 88.7559 63.7581 89.3249 C 60.4456 90.3694 58.0771 86.5694 55.25 85.12',
        'M 55.88 17.12 C 56.76 18.74 57.17 20.95 56.63 23.87 C 56.0478 27.0044 55.3271 30.1292 54.4798 33.2234 C 53.6343 36.3106 52.6629 39.3672 51.5774 42.3722 C 50.485 45.3959 49.2771 48.3673 47.9657 51.265 C 46.6337 54.2084 45.1948 57.0758 43.6618 59.8447 C 42.0885 62.6865 40.416 65.4246 38.658 68.0348 C 36.8319 70.746 34.9136 73.3192 32.9184 75.7271 C 30.8182 78.2617 28.6328 80.6133 26.38 82.75'
      ]);
    });
    test('must check all data returned of word ぎゅうにゅう', () {
      final kanas = converter.convert('ぎゅうにゅう', kanasJson);

      expect(kanas[0].id, 'ぎゅ');
      expect(kanas[0].romaji, 'gyu');
      expect(kanas[0].kanaType, KanaType.hiragana);
      expect(kanas[0].strokes, [
        'M 13.8596 35.1261 C 15.5167 35.7822 17.9494 36.0534 19.0424 35.896 C 21.0218 35.6049 23.855 35.0718 26.8926 34.4416 C 29.4763 33.9055 32.208 33.2992 34.6881 32.7119 C 38.0563 31.9142 40.9605 31.1515 42.4002 30.6472 C 44.3129 29.9824 45.4852 29.5537 46.7016 28.7926',
        'M 18.9278 51.266 C 20.6995 52.0096 23.3085 52.3158 24.472 52.1321 C 26.5937 51.803 29.6301 51.1994 32.8848 50.4857 C 35.6517 49.8791 38.5763 49.1928 41.2311 48.528 C 44.833 47.626 47.938 46.7633 49.4781 46.1922 C 51.523 45.4399 52.7834 44.9588 54.0791 44.0927',
        'M 23.996 21.0245 C 25.3181 21.7943 26.7549 23.5964 27.5217 25.5034 C 28.5419 28.0348 29.7573 30.634 31.1259 33.254 C 32.4156 35.7232 33.8413 38.211 35.3678 40.678 C 36.8576 43.0858 38.4434 45.474 40.0925 47.8059 C 41.7526 50.1534 43.4768 52.444 45.2317 54.6405 C 47.0583 56.9266 48.9182 59.1109 50.7738 61.1512 C 55.198 66.0191 57.2786 68.0325 54.4062 67.4766 C 52.9065 67.1864 50.0567 66.1957 45.4852 64.5454',
        'M 16.7242 81.4901 C 18.9713 83.5375 21.5236 85.0365 24.2377 86.0886 C 26.993 87.1566 29.915 87.7641 32.8536 88.0171 C 35.8354 88.2739 38.8343 88.1658 41.6933 87.8037 C 44.803 87.4099 47.7473 86.7158 50.3242 85.864',
        'M 55.1721 25.066 C 56.4077 25.8464 57.7579 27.0542 58.9891 28.4124 C 60.173 29.7185 61.247 31.1637 62.0032 32.5018',
        'M 60.7956 20.7971 C 62.1409 21.4821 63.609 22.5327 64.9549 23.7178 C 66.3074 24.9087 67.5364 26.2353 68.3935 27.463',
        'M 66.3518 60.2354 C 66.9269 60.8603 67.1935 61.9538 66.9791 62.839 C 66.3684 65.3252 65.9465 67.6757 65.782 70.0829 C 65.6225 72.415 65.7046 74.8003 66.0905 77.4138 C 67.251 85.2662 66.5609 79.028 67.4496 76.7889 C 68.5494 74.0175 69.9809 71.6379 71.6351 69.6581 C 73.5288 67.3917 75.7146 65.6493 78.029 64.4428 C 80.6024 63.1014 83.335 62.4224 86.0024 62.4224 C 89.0072 62.4224 91.1108 63.2815 92.5358 64.5534 C 94.4577 66.2687 95.1454 68.7351 95.1454 70.858 C 95.1454 74.2544 93.9994 76.722 92.2562 78.371 C 90.2309 80.287 87.3993 81.0978 84.6223 80.9763 C 81.7683 80.8515 78.972 79.7421 77.1677 77.8356',
        'M 81.9771 56.6425 C 83.0749 57.3715 83.2997 57.9443 83.4408 59.6106 C 83.6243 61.804 83.771 63.7578 83.8835 65.7201 C 83.9954 67.671 84.0735 69.6304 84.1204 71.8421 C 84.1986 75.5796 83.8527 78.3853 83.2549 80.5915 C 82.2544 84.2839 80.5486 86.2968 78.9451 88.1874'
      ]);

      expect(kanas[1].id, 'う');
      expect(kanas[1].romaji, 'u');
      expect(kanas[1].kanaType, KanaType.hiragana);
      expect(kanas[1].strokes, [
        'M 42 15.5 C 44.373 16.3952 46.4572 17.0692 48.3188 17.5493 C 50.866 18.2063 52.9965 18.5 54.88 18.5 C 59.9195 18.5 61.7878 18.9159 60.5822 20.2319 C 59.8094 21.0756 57.7734 22.2891 54.5 24',
        'M 33 42.38 C 35.12 43.5 37.12 45.26 41.5 43.76 C 43.7496 42.9896 47.0518 41.1323 50.5109 39.5241 C 53.7867 38.0012 57.2033 36.7016 60 36.76 C 62.5655 36.8135 64.8821 37.8146 66.6612 40.0617 C 67.9617 41.7042 68.975 44.0125 69.5884 47.1031 C 70.0167 49.2608 70.25 51.7999 70.25 54.76 C 70.25 58.1021 69.8659 61.4098 69.1017 64.6528 C 68.348 67.8507 67.2245 70.9858 65.735 74.029 C 64.3104 76.9396 62.5509 79.766 60.4597 82.4831 C 58.499 85.0307 56.2467 87.4821 53.7054 89.8164 C 51.3454 91.9842 48.7363 94.0509 45.88 96'
      ]);

      expect(kanas[2].id, 'にゅ');
      expect(kanas[2].romaji, 'nyu');
      expect(kanas[2].kanaType, KanaType.hiragana);
      expect(kanas[2].strokes, [
        'M 16.0749 25.5044 C 17.2313 26.8718 17.5736 28.923 17.111 31.3206 C 16.564 34.1742 15.9091 37.054 15.2216 39.9443 C 14.5422 42.8006 13.8309 45.6673 13.1605 48.5291 C 12.4837 51.4181 11.8485 54.3022 11.3295 57.1659 C 10.7961 60.1094 10.3856 63.0313 10.1789 65.9149 C 9.96493 68.9016 9.96973 71.8471 10.2835 74.7327 C 10.6927 78.494 11.1224 80.8593 11.5828 82.171 C 12.649 85.2091 13.88 82.5961 15.4036 78.5868 C 16.2261 76.4223 17.134 73.8509 18.1472 71.542',
        'M 30.9245 32.6972 C 31.8127 33.4174 33.1819 34.1376 35.6427 33.9279 C 37.8223 33.7402 40.1125 33.3365 42.4405 32.8819 C 44.6794 32.4446 46.9532 31.9603 49.197 31.5757 C 51.5325 31.1755 53.8355 30.8833 56.0329 30.8648 C 61.455 30.8202 62.3326 31.4902 60.8311 32.5365 C 59.7435 33.2943 57.4076 34.2496 54.6464 35.2737 C 52.6406 36.0177 50.4103 36.798 48.271 37.5653',
        'M 30.3047 66.7559 C 30.8395 70.625 32.213 73.5271 34.22 75.6451 C 36.4307 77.978 39.4101 79.3596 42.8843 80.0343 C 45.8579 80.6119 49.194 80.6716 52.7209 80.3666 C 55.1224 80.157 57.2195 79.9712 59.3591 79.6863 C 61.4068 79.4137 63.4933 79.0504 65.9227 78.4887',
        'M 73.9925 59.4415 C 74.4915 59.9791 74.7229 60.92 74.5369 61.6817 C 74.007 63.8204 73.6409 65.8424 73.498 67.9131 C 73.3595 69.9202 73.4307 71.9731 73.7656 74.2224 C 74.7728 80.9788 74.1739 75.6113 74.9452 73.6847 C 75.9028 71.2921 77.1502 69.2389 78.592 67.532 C 80.2372 65.5843 82.1355 64.0875 84.1452 63.0521 C 86.3731 61.9042 88.7379 61.3232 91.0463 61.3232 C 93.6451 61.3232 95.4671 62.0573 96.7037 63.1455 C 98.3813 64.6219 98.9812 66.7502 98.9812 68.5815 C 98.9812 71.5171 97.9777 73.6463 96.4533 75.0651 C 94.694 76.7028 92.2408 77.3942 89.8362 77.2872 C 87.3636 77.1771 84.9423 76.223 83.3791 74.5853',
        'M 87.553 56.35 C 88.5057 56.9772 88.7008 57.4701 88.8233 58.9038 C 88.9825 60.7911 89.1099 62.4722 89.2075 64.1607 C 89.3046 65.8393 89.3724 67.5253 89.4131 69.4283 C 89.481 72.6483 89.1799 75.0646 88.6599 76.964 C 87.7913 80.1363 86.3121 81.8669 84.9216 83.4923'
      ]);

      expect(kanas[3].id, 'う');
      expect(kanas[3].romaji, 'u');
      expect(kanas[3].kanaType, KanaType.hiragana);
      expect(kanas[3].strokes, [
        'M 42 15.5 C 44.373 16.3952 46.4572 17.0692 48.3188 17.5493 C 50.866 18.2063 52.9965 18.5 54.88 18.5 C 59.9195 18.5 61.7878 18.9159 60.5822 20.2319 C 59.8094 21.0756 57.7734 22.2891 54.5 24',
        'M 33 42.38 C 35.12 43.5 37.12 45.26 41.5 43.76 C 43.7496 42.9896 47.0518 41.1323 50.5109 39.5241 C 53.7867 38.0012 57.2033 36.7016 60 36.76 C 62.5655 36.8135 64.8821 37.8146 66.6612 40.0617 C 67.9617 41.7042 68.975 44.0125 69.5884 47.1031 C 70.0167 49.2608 70.25 51.7999 70.25 54.76 C 70.25 58.1021 69.8659 61.4098 69.1017 64.6528 C 68.348 67.8507 67.2245 70.9858 65.735 74.029 C 64.3104 76.9396 62.5509 79.766 60.4597 82.4831 C 58.499 85.0307 56.2467 87.4821 53.7054 89.8164 C 51.3454 91.9842 48.7363 94.0509 45.88 96'
      ]);
    });
    test('must check all data returned of word やっきょく', () {
      final kanas = converter.convert('やっきょく', kanasJson);

      expect(kanas[0].id, 'や');
      expect(kanas[0].romaji, 'ya');
      expect(kanas[0].kanaType, KanaType.hiragana);
      expect(kanas[0].strokes, [
        'M 18 49.38 C 19.88 51 23.25 51.88 26.62 50.26 C 29.38 48.9359 32.112 47.5758 34.8129 46.2203 C 37.5688 44.8371 40.2923 43.4588 42.9802 42.1283 C 45.7674 40.7487 48.5162 39.4205 51.2233 38.1918 C 54.0829 36.8939 56.8958 35.707 59.6577 34.6878 C 62.631 33.5906 65.5452 32.6877 68.395 32.0499 C 71.4917 31.3568 74.5123 30.9766 77.45 31 C 80.152 31.0419 82.6719 31.4294 84.8741 32.1709 C 87.4582 33.041 89.6049 34.3986 91.0954 36.2576 C 92.575 38.1031 93.4079 40.4427 93.38 43.29 C 93.38 45.8682 92.3377 48.4388 90.4946 50.7965 C 88.9551 52.7657 86.8569 54.5865 84.3406 56.1392 C 82.1463 57.4932 79.6341 58.6434 76.8972 59.5105 C 74.3895 60.305 71.6932 60.8618 68.88 61.12',
        'M 47.13 15.88 C 49.3612 16.2635 51.6248 17.0819 53.5589 18.096 C 56.063 19.409 58.015 21.05 58.63 22.5 C 60.75 27.5 57.63 24.88 55.75 25.12',
        'M 30 24.38 C 32.38 26.26 33.28 27.25 33.88 29.63 C 34.4242 31.8109 35.222 34.8597 36.1772 38.4239 C 36.896 41.1059 37.7038 44.0796 38.5597 47.1949 C 39.34 50.0349 40.1602 52.9926 40.9893 55.954 C 41.815 58.9033 42.6494 61.8564 43.4619 64.7008 C 44.3436 67.7872 45.1994 70.7455 45.9901 73.4321 C 47.005 76.8804 47.9126 79.8809 48.63 82.13 C 49.28 84.17 50.51 88.38 51.51 91.51'
      ]);

      expect(kanas[1].id, 'っ');
      expect(kanas[1].romaji, 'k');
      expect(kanas[1].kanaType, KanaType.hiragana);
      expect(kanas[1].strokes, [
        'M 23 61.15 C 24.49 62.44 26.72 62.82 29.46 61.65 C 32.5095 60.3474 35.3485 59.1963 38.0438 58.1936 C 41.1313 57.0451 44.0303 56.0914 46.8412 55.3278 C 49.9247 54.4902 52.9022 53.8815 55.9062 53.4955 C 58.9132 53.1091 61.9468 52.946 65.14 53 C 68.2515 53.0529 71.1981 53.6259 73.7776 54.678 C 76.6547 55.8514 79.0751 57.6209 80.7585 59.9298 C 82.4117 62.1974 83.3541 64.9853 83.32 68.24 C 83.2864 71.5825 82.3426 74.6007 80.7034 77.2961 C 79.1206 79.8987 76.8894 82.2004 74.2031 84.2024 C 71.7692 86.0163 68.9618 87.5841 65.9246 88.907 C 63.079 90.1463 60.0318 91.1706 56.9012 91.9806 C 53.8207 92.7776 50.6593 93.3672 47.53 93.75'
      ]);

      expect(kanas[2].id, 'きょ');
      expect(kanas[2].romaji, 'kyo');
      expect(kanas[2].kanaType, KanaType.hiragana);
      expect(kanas[2].strokes, [
        'M 14.9998 33.1085 C 16.7973 33.8264 19.4362 34.1231 20.6218 33.9508 C 22.7694 33.6323 25.8433 33.0489 29.1391 32.3592 C 31.9419 31.7726 34.9052 31.1092 37.5954 30.4665 C 41.2481 29.594 44.3975 28.7597 45.9589 28.2081 C 48.0337 27.4807 49.3053 27.0117 50.6247 26.179',
        'M 20.4975 50.7674 C 22.4193 51.5809 25.2494 51.9159 26.5115 51.7149 C 28.8135 51.3548 32.1079 50.6942 35.6391 49.9132 C 38.6407 49.2494 41.8133 48.4985 44.6931 47.7711 C 48.5991 46.7844 51.9663 45.8408 53.6365 45.2161 C 55.8547 44.393 57.2219 43.8666 58.6274 42.919',
        'M 25.9952 17.6702 C 27.4293 18.5125 28.9878 20.4841 29.8196 22.5707 C 30.9249 25.3387 32.2413 28.1802 33.7233 31.0443 C 35.1209 33.7453 36.6659 36.4664 38.3199 39.1647 C 39.9351 41.7996 41.6544 44.4129 43.4421 46.9647 C 45.2429 49.5351 47.1131 52.043 49.0164 54.4479 C 50.9995 56.9535 53.0185 59.3471 55.0324 61.5828 C 57.0619 63.8352 58.6368 65.5289 59.543 66.6878 C 61.2991 68.9337 60.5437 69.1704 55.7182 67.5697 C 54.0718 67.0236 51.9516 66.2636 49.2957 65.2965',
        'M 18.1072 83.8358 C 20.5406 86.0723 23.3041 87.7106 26.2427 88.8614 C 29.2325 90.0322 32.4035 90.6984 35.5928 90.9762 C 38.8297 91.2583 42.0854 91.1403 45.1892 90.744 C 48.5635 90.3133 51.7582 89.5536 54.5544 88.6214',
        'M 83.2068 66.3877 C 86.4838 65.8226 89.2073 65.2299 91.2842 64.5873 C 92.3747 64.2493 93.3666 64.0832 94.0132 64.0832',
        'M 81.6231 56.937 C 82.604 57.8732 82.9273 58.754 82.878 59.7954 C 82.7649 62.3661 82.7231 64.9827 82.744 67.6429 C 82.7642 70.2184 82.8431 72.8349 82.9728 75.4902 C 83.0986 78.0651 83.2721 80.6764 83.4863 83.3225 C 83.7222 86.2341 82.567 88.23 80.7999 89.4986 C 78.9375 90.8355 76.3954 91.3646 74.0858 91.3062 C 70.9523 91.227 68.2466 90.0663 68.2466 88.3747 C 68.2466 85.5272 71.5817 84.728 75.3214 84.8637 C 78.5152 84.9796 82.0042 85.7773 83.963 86.5632 C 87.503 87.9814 88.9936 88.7071 92.0514 91.1224'
      ]);

      expect(kanas[3].id, 'く');
      expect(kanas[3].romaji, 'ku');
      expect(kanas[3].kanaType, KanaType.hiragana);
      expect(kanas[3].strokes, [
        'M 60.66 15 C 61.16 16.62 61.01 20.44 59.66 22.38 C 58.1851 24.482 56.672 26.5764 55.1627 28.6227 C 53.6017 30.7391 52.0448 32.804 50.5386 34.7727 C 48.8844 36.9347 47.2914 38.9806 45.821 40.851 C 44.0002 43.1672 42.3676 45.2144 41.04 46.88 C 39.2539 49.1127 38.3072 50.7531 38.0655 52.2386 C 37.7659 54.0797 38.5494 55.6827 40.16 57.88 C 41.6189 59.8694 43.201 62.1227 44.8291 64.5186 C 46.3033 66.688 47.8153 68.9743 49.3079 71.2874 C 50.787 73.5798 52.2471 75.8985 53.6323 78.1558 C 55.125 80.5883 56.5308 82.9496 57.78 85.13 C 59.26 87.72 60.53 89.88 62.28 93.75'
      ]);
    });
    test('must check all data returned of word ニュージーランド', () {
      final kanas = converter.convert('ニュージーランド', kanasJson);

      expect(kanas[0].id, 'ニュ');
      expect(kanas[0].romaji, 'nyu');
      expect(kanas[0].kanaType, KanaType.katakana);
      expect(kanas[0].strokes, [
        'M 19.869 39.5188 C 21.8164 40.4271 23.242 40.74 25.6724 40.5492 C 28.2902 40.3471 30.5914 40.1069 32.7064 39.8534 C 35.2345 39.5504 37.4964 39.2283 39.7147 38.9297 C 42.0191 38.6194 44.2764 38.3344 46.7361 38.122 C 48.7926 37.9465 51.6203 37.9999 53.2718 38.1831',
        'M 10.0304 70.1941 C 12.0713 70.9574 13.7539 71.3008 17.1347 70.7666 C 19.9312 70.3268 22.6297 69.9499 25.246 69.6274 C 28.0488 69.2819 30.7574 68.9988 33.391 68.7677 C 36.1917 68.5219 38.9076 68.335 41.5622 68.1944 C 44.3493 68.0467 47.0688 67.9501 49.7474 67.8901 C 52.5111 67.8281 55.2314 67.8051 57.9379 67.8051 C 60.8591 67.8051 64.1697 68.5684 66.6002 69.6217',
        'M 77.4082 56.4454 C 78.2391 56.953 79.2048 57.1459 80.6446 56.953 C 85.2775 56.3195 86.7304 56.2482 90.0887 55.7071 C 92.4507 55.3295 92.8118 55.7616 92.3637 57.8549 C 91.9624 59.7293 91.5509 61.6966 91.1685 63.6099 C 90.7592 65.6576 90.3833 67.6434 90.0887 69.387',
        'M 72.9276 70.4441 C 73.889 70.9517 74.5981 71.1699 76.1206 70.9517 C 79.8459 70.4111 82.8167 70.0907 85.5598 69.9023 C 88.7552 69.683 91.6417 69.6429 95.0521 69.6429 C 96.3658 69.6429 97.6317 69.8107 98.9454 70.0204'
      ]);

      expect(kanas[1].id, 'ー');
      expect(kanas[1].romaji, 'u');
      expect(kanas[1].kanaType, KanaType.katakana);
      expect(kanas[1].strokes, [
        'M 14.5 53 C 16.9721 52.6776 19.4664 52.4568 21.7357 52.3059 C 24.7447 52.1058 27.3582 52.0285 29 52 C 32.0891 51.9457 35.1274 51.8739 38.0799 51.7906 C 41.2169 51.7021 44.257 51.6007 47.1581 51.4937 C 50.3729 51.3752 53.417 51.2499 56.2334 51.1277 C 59.6203 50.9808 62.6778 50.8384 65.3063 50.7181 C 69.6554 50.519 72.8301 50.38 74.38 50.38 C 75.9591 50.38 78.4095 50.3079 81.0869 50.2128 C 83.2881 50.1347 85.6426 50.0411 87.7926 49.9593 C 90.6949 49.8488 93.2243 49.76 94.5 49.76'
      ]);

      expect(kanas[2].id, 'ジ');
      expect(kanas[2].romaji, 'ji');
      expect(kanas[2].kanaType, KanaType.katakana);
      expect(kanas[2].strokes, [
        'M 39.87 19.75 C 42.179 20.4553 44.3891 21.7397 46.2782 23.1772 C 48.5944 24.9398 50.4282 26.9325 51.37 28.37',
        'M 26 42.62 C 27.6198 43.0586 30.1712 44.4263 32.5708 46.0136 C 34.9857 47.611 37.2468 49.4308 38.25 50.75',
        'M 33 85 C 34.9019 85.8511 36.5996 86.0508 38.3453 85.7209 C 39.9223 85.4228 41.5385 84.6926 43.38 83.62 C 46.0112 82.0924 48.5714 80.4952 51.0686 78.821 C 53.5815 77.1363 56.0306 75.3736 58.4238 73.5254 C 60.8046 71.6868 63.1302 69.7637 65.4084 67.7486 C 67.6492 65.7666 69.8441 63.6957 72.0008 61.5288 C 74.1014 59.4181 76.1656 57.2165 78.2004 54.9173 C 80.1668 52.6955 82.1057 50.3827 84.0233 47.9729 C 85.8666 45.6565 87.6903 43.2506 89.5 40.75',
        'M 78.5 18.98 C 79.9521 19.8869 81.5367 21.2898 82.9824 22.8683 C 84.3742 24.3879 85.6373 26.0703 86.53 27.63',
        'M 85.25 14.38 C 86.7193 15.1673 88.3219 16.3796 89.7891 17.7457 C 91.2478 19.1039 92.5727 20.6141 93.5 22.01'
      ]);

      expect(kanas[3].id, 'ー');
      expect(kanas[3].romaji, 'i');
      expect(kanas[3].kanaType, KanaType.katakana);
      expect(kanas[3].strokes, [
        'M 14.5 53 C 16.9721 52.6776 19.4664 52.4568 21.7357 52.3059 C 24.7447 52.1058 27.3582 52.0285 29 52 C 32.0891 51.9457 35.1274 51.8739 38.0799 51.7906 C 41.2169 51.7021 44.257 51.6007 47.1581 51.4937 C 50.3729 51.3752 53.417 51.2499 56.2334 51.1277 C 59.6203 50.9808 62.6778 50.8384 65.3063 50.7181 C 69.6554 50.519 72.8301 50.38 74.38 50.38 C 75.9591 50.38 78.4095 50.3079 81.0869 50.2128 C 83.2881 50.1347 85.6426 50.0411 87.7926 49.9593 C 90.6949 49.8488 93.2243 49.76 94.5 49.76'
      ]);

      expect(kanas[4].id, 'ラ');
      expect(kanas[4].romaji, 'ra');
      expect(kanas[4].kanaType, KanaType.katakana);
      expect(kanas[4].strokes, [
        'M 38.63 21.06 C 40.7 22.92 43.06 23.59 46.68 23.21 C 49.3798 22.9283 51.73 22.6388 53.8859 22.3466 C 56.4693 21.9966 58.7738 21.6426 61.0668 21.2935 C 63.3813 20.9411 65.684 20.5936 68.25 20.26 C 70.66 19.95 72.38 19.73 74.76 20.07',
        'M 26 41.89 C 28.38 43.59 31.12 44.13 35.25 43.59 C 37.8904 43.243 40.6449 42.8508 43.4416 42.4336 C 46.1492 42.0297 48.8962 41.6024 51.6172 41.17 C 54.3899 40.7294 57.1355 40.2835 59.785 39.8517 C 62.6486 39.385 65.3997 38.9347 67.951 38.5255 C 71.0164 38.0337 73.7934 37.601 76.13 37.27 C 78.8268 36.888 80.7438 36.9746 81.8655 37.6489 C 83.2396 38.4747 83.4205 40.1823 82.38 42.99 C 81.2861 45.9505 79.9839 48.9366 78.4738 51.9069 C 77.0337 54.7396 75.4046 57.558 73.5867 60.3262 C 71.8348 62.994 69.9077 65.6153 67.8057 68.158 C 65.7673 70.6238 63.5644 73.0157 61.1973 75.3044 C 58.8955 77.53 56.4384 79.6581 53.8264 81.6618 C 51.2874 83.6095 48.602 85.4396 45.7705 87.1275 C 43.0274 88.7626 40.1471 90.2643 37.13 91.61'
      ]);

      expect(kanas[5].id, 'ン');
      expect(kanas[5].romaji, 'n');
      expect(kanas[5].kanaType, KanaType.katakana);
      expect(kanas[5].strokes, [
        'M 26.5 24.88 C 28.5074 25.6293 30.6557 26.8851 32.7329 28.448 C 34.6141 29.8635 36.437 31.5309 38.0439 33.3021 C 39.7537 35.1867 41.219 37.1888 42.25 39.13',
        'M 28.62 83.75 C 31.12 85.37 33.74 84.71 36.37 83.13 C 39.0718 81.502 41.6788 79.8672 44.2032 78.2171 C 46.8331 76.498 49.3733 74.7622 51.8375 72.9996 C 54.3786 71.1822 56.8389 69.3363 59.2335 67.4512 C 61.6715 65.532 64.0414 63.5721 66.3591 61.56 C 68.6847 59.541 70.9577 57.4695 73.1942 55.3338 C 75.4055 53.2223 77.581 51.048 79.7364 48.7999 C 81.8387 46.607 83.9218 44.3439 86 42'
      ]);

      expect(kanas[6].id, 'ド');
      expect(kanas[6].romaji, 'do');
      expect(kanas[6].kanaType, KanaType.katakana);
      expect(kanas[6].strokes, [
        'M 44 16.38 C 45.25 17.5 46.12 19.63 46.12 21.88 C 46.12 25.0772 46.12 28.2934 46.12 31.4834 C 46.12 34.7276 46.12 37.9447 46.12 41.0876 C 46.12 44.3888 46.12 47.608 46.12 50.6904 C 46.12 54.0812 46.12 57.3066 46.12 60.2935 C 46.12 63.8804 46.12 67.1235 46.12 69.8963 C 46.12 74.8052 46.12 78.2401 46.12 79.5 C 46.12 81.4313 46.12 83.8591 46.12 86.1902 C 46.12 88.8322 46.12 91.35 46.12 92.88',
        'M 49.24 43.12 C 51.8792 44.0454 54.2535 45.0909 56.4196 46.2479 C 58.8376 47.5395 60.9962 48.9701 62.9741 50.528 C 65.0567 52.1682 66.939 53.9495 68.713 55.858 C 70.4647 57.7424 72.1109 59.7508 73.74 61.87',
        'M 66.87 26.75 C 68.2729 27.6427 69.8058 29.0247 71.2034 30.5786 C 72.5455 32.0708 73.7627 33.7216 74.62 35.25',
        'M 73.24 21.88 C 74.7678 22.6639 76.4351 23.8665 77.9633 25.2228 C 79.4959 26.5831 80.8886 28.0979 81.86 29.5'
      ]);
    });
  });
  group('check hiragana ids and romajis', () {
    test('must check id and romaji with gojuuon samples', () {
      expectKR(converter.convert('ひ', kanasJson), kanasE: [KE('ひ', 'hi')]);
      expectKR(converter.convert('あき', kanasJson), kanasE: [KE('あ', 'a'), KE('き', 'ki')]);
      expectKR(converter.convert('ももいろ', kanasJson), kanasE: [KE('も', 'mo'), KE('も', 'mo'), KE('い', 'i'), KE('ろ', 'ro')]);
      expectKR(converter.convert('すいか', kanasJson), kanasE: [KE('す', 'su'), KE('い', 'i'), KE('か', 'ka')]);
      expectKR(converter.convert('にんじん', kanasJson), kanasE: [KE('に', 'ni'), KE('ん', 'n'), KE('じ', 'ji'), KE('ん', 'n')]);
      expectKR(converter.convert('だいどころ', kanasJson), kanasE: [KE('だ', 'da'), KE('い', 'i'), KE('ど', 'do'), KE('こ', 'ko'), KE('ろ', 'ro')]);
      expectKR(converter.convert('だいだいいろ', kanasJson),
          kanasE: [KE('だ', 'da'), KE('い', 'i'), KE('だ', 'da'), KE('い', 'i'), KE('い', 'i'), KE('ろ', 'ro')]);
      expectKR(converter.convert('えんぴつ', kanasJson), kanasE: [KE('え', 'e'), KE('ん', 'n'), KE('ぴ', 'pi'), KE('つ', 'tsu')]);
      expectKR(converter.convert('せんぷうき', kanasJson), kanasE: [KE('せ', 'se'), KE('ん', 'n'), KE('ぷ', 'pu'), KE('う', 'u'), KE('き', 'ki')]);
    });
    test('must check id and romaji with youon samples', () {
      expectKR(converter.convert('ぎゅうにゅう', kanasJson), kanasE: [KE('ぎゅ', 'gyu'), KE('う', 'u'), KE('にゅ', 'nyu'), KE('う', 'u')]);
      expectKR(converter.convert('じてんしゃ', kanasJson), kanasE: [KE('じ', 'ji'), KE('て', 'te'), KE('ん', 'n'), KE('しゃ', 'sha')]);
      expectKR(converter.convert('かぼちゃ', kanasJson), kanasE: [KE('か', 'ka'), KE('ぼ', 'bo'), KE('ちゃ', 'cha')]);
      expectKR(converter.convert('びょういん', kanasJson), kanasE: [KE('びょ', 'byo'), KE('う', 'u'), KE('い', 'i'), KE('ん', 'n')]);
      expectKR(converter.convert('こうじょう', kanasJson), kanasE: [KE('こ', 'ko'), KE('う', 'u'), KE('じょ', 'jo'), KE('う', 'u')]);
      expectKR(converter.convert('しょくどう', kanasJson), kanasE: [KE('しょ', 'sho'), KE('く', 'ku'), KE('ど', 'do'), KE('う', 'u')]);
    });
    test('must check id and romaji with sokuon samples', () {
      expectKR(converter.convert('きっさてん', kanasJson), kanasE: [KE('き', 'ki'), KE('っ', 's'), KE('さ', 'sa'), KE('て', 'te'), KE('ん', 'n')]);
      expectKR(converter.convert('がっこう', kanasJson), kanasE: [KE('が', 'ga'), KE('っ', 'k'), KE('こ', 'ko'), KE('う', 'u')]);
      expectKR(converter.convert('せっけん', kanasJson), kanasE: [KE('せ', 'se'), KE('っ', 'k'), KE('け', 'ke'), KE('ん', 'n')]);
      expectKR(converter.convert('やっきょく', kanasJson), kanasE: [KE('や', 'ya'), KE('っ', 'k'), KE('きょ', 'kyo'), KE('く', 'ku')]);
    });
  });
  group('check katakana ids and romajis', () {
    test('must check id and romaji with gojuuon samples', () {
      expectKR(converter.convert('ロシア', kanasJson), kanasE: [KE('ロ', 'ro'), KE('シ', 'shi'), KE('ア', 'a')]);
      expectKR(converter.convert('タオル', kanasJson), kanasE: [KE('タ', 'ta'), KE('オ', 'o'), KE('ル', 'ru')]);
      expectKR(converter.convert('トルコ', kanasJson), kanasE: [KE('ト', 'to'), KE('ル', 'ru'), KE('コ', 'ko')]);
      expectKR(converter.convert('イヤリング', kanasJson), kanasE: [KE('イ', 'i'), KE('ヤ', 'ya'), KE('リ', 'ri'), KE('ン', 'n'), KE('グ', 'gu')]);
      expectKR(converter.convert('オレンジ', kanasJson), kanasE: [KE('オ', 'o'), KE('レ', 're'), KE('ン', 'n'), KE('ジ', 'ji')]);
      expectKR(converter.convert('ドア', kanasJson), kanasE: [KE('ド', 'do'), KE('ア', 'a')]);
      expectKR(converter.convert('ピンポン', kanasJson), kanasE: [KE('ピ', 'pi'), KE('ン', 'n'), KE('ポ', 'po'), KE('ン', 'n')]);
    });
    test('must check id and romaji with youon samples', () {
      expectKR(converter.convert('ジャケット', kanasJson), kanasE: [KE('ジャ', 'ja'), KE('ケ', 'ke'), KE('ッ', 't'), KE('ト', 'to')]);
      expectKR(converter.convert('シャンプー', kanasJson), kanasE: [KE('シャ', 'sha'), KE('ン', 'n'), KE('プ', 'pu'), KE('ー', 'u')]);
      expectKR(converter.convert('シャワー', kanasJson), kanasE: [KE('シャ', 'sha'), KE('ワ', 'wa'), KE('ー', 'a')]);
      expectKR(converter.convert('ニュージーランド', kanasJson),
          kanasE: [KE('ニュ', 'nyu'), KE('ー', 'u'), KE('ジ', 'ji'), KE('ー', 'i'), KE('ラ', 'ra'), KE('ン', 'n'), KE('ド', 'do')]);
      expectKR(converter.convert('コンピューター', kanasJson),
          kanasE: [KE('コ', 'ko'), KE('ン', 'n'), KE('ピュ', 'pyu'), KE('ー', 'u'), KE('タ', 'ta'), KE('ー', 'a')]);
      expectKR(converter.convert('ショーツ', kanasJson), kanasE: [KE('ショ', 'sho'), KE('ー', 'o'), KE('ツ', 'tsu')]);
    });
    test('must check id and romaji with sokuon samples', () {
      expectKR(converter.convert('ネックレス', kanasJson), kanasE: [KE('ネ', 'ne'), KE('ッ', 'k'), KE('ク', 'ku'), KE('レ', 're'), KE('ス', 'su')]);
      expectKR(converter.convert('ココナッツ', kanasJson), kanasE: [KE('コ', 'ko'), KE('コ', 'ko'), KE('ナ', 'na'), KE('ッ', 't'), KE('ツ', 'tsu')]);
      expectKR(converter.convert('ベッド', kanasJson), kanasE: [KE('ベ', 'be'), KE('ッ', 'd'), KE('ド', 'do')]);
      expectKR(converter.convert('ピーナッツ', kanasJson), kanasE: [KE('ピ', 'pi'), KE('ー', 'i'), KE('ナ', 'na'), KE('ッ', 't'), KE('ツ', 'tsu')]);
      expectKR(converter.convert('サッカー', kanasJson), kanasE: [KE('サ', 'sa'), KE('ッ', 'k'), KE('カ', 'ka'), KE('ー', 'a')]);
    });
    test('must check id and romaji with small vowel samples', () {
      expectKR(converter.convert('チェリー', kanasJson), kanasE: [KE('チェ', 'che'), KE('リ', 'ri'), KE('ー', 'i')]);
      expectKR(converter.convert('ソファー', kanasJson), kanasE: [KE('ソ', 'so'), KE('ファ', 'fa'), KE('ー', 'a')]);
      expectKR(converter.convert('エーティーエム', kanasJson),
          kanasE: [KE('エ', 'e'), KE('ー', 'e'), KE('ティ', 'ti'), KE('ー', 'i'), KE('エ', 'e'), KE('ム', 'mu')]);
      expectKR(converter.convert('フォーク', kanasJson), kanasE: [KE('フォ', 'fo'), KE('ー', 'o'), KE('ク', 'ku')]);
    });
    test('must check id and romaji with long vowel samples', () {
      expectKR(converter.convert('スプーン', kanasJson), kanasE: [KE('ス', 'su'), KE('プ', 'pu'), KE('ー', 'u'), KE('ン', 'n')]);
      expectKR(converter.convert('ブーツ', kanasJson), kanasE: [KE('ブ', 'bu'), KE('ー', 'u'), KE('ツ', 'tsu')]);
      expectKR(converter.convert('コーヒー', kanasJson), kanasE: [KE('コ', 'ko'), KE('ー', 'o'), KE('ヒ', 'hi'), KE('ー', 'i')]);
      expectKR(converter.convert('バレーボール', kanasJson),
          kanasE: [KE('バ', 'ba'), KE('レ', 're'), KE('ー', 'e'), KE('ボ', 'bo'), KE('ー', 'o'), KE('ル', 'ru')]);
    });
  });

  group('check both ids and romajis', () {
    test('must check id and romaji with hiragana and katakana syllabes', () {
      expectKR(converter.convert('けしゴム', kanasJson), kanasE: [KE('け', 'ke'), KE('し', 'shi'), KE('ゴ', 'go'), KE('ム', 'mu')]);
      expectKR(converter.convert('でんしレンジ', kanasJson),
          kanasE: [KE('で', 'de'), KE('ん', 'n'), KE('し', 'shi'), KE('レ', 're'), KE('ン', 'n'), KE('ジ', 'ji')]);
      expectKR(converter.convert('みなみアフリカ', kanasJson),
          kanasE: [KE('み', 'mi'), KE('な', 'na'), KE('み', 'mi'), KE('ア', 'a'), KE('フ', 'fu'), KE('リ', 'ri'), KE('カ', 'ka')]);
    });
  });
}

void expectKR(List<KanaModel> kanas, {required List<KE> kanasE}) {
  expect(kanas.length == kanasE.length, isTrue);
  for (var i = 0; i < kanasE.length; i++) {
    expect(kanas[i].id, kanasE[i].id);
    expect(kanas[i].romaji, kanasE[i].romaji);
  }
}

class KE {
  KE(this.id, this.romaji);

  final String id;
  final String romaji;
}
